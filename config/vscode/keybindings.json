[
  // File Operations
  {
    "key": "ctrl+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.reopenClosedEditor"
  },

  // Editor Navigation
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+5",
    "command": "workbench.action.openEditorAtIndex5"
  },

  // Code Editing
  {
    "key": "ctrl+d",
    "command": "editor.action.addSelectionToNextFindMatch"
  },
  {
    "key": "ctrl+shift+l",
    "command": "editor.action.selectHighlights"
  },
  {
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction"
  },
  {
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.deleteLines"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.blockComment"
  },

  // Code Formatting
  {
    "key": "ctrl+shift+f",
    "command": "editor.action.formatDocument"
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "editor.action.formatSelection"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.formatDocument"
  },

  // Code Navigation
  {
    "key": "f12",
    "command": "editor.action.revealDefinition"
  },
  {
    "key": "ctrl+f12",
    "command": "editor.action.goToImplementation"
  },
  {
    "key": "shift+f12",
    "command": "editor.action.goToReferences"
  },
  {
    "key": "f2",
    "command": "editor.action.rename"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.showAllSymbols"
  },

  // Search & Replace
  {
    "key": "ctrl+f",
    "command": "actions.find"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.replaceInFiles"
  },

  // Panel & Sidebar
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "ctrl+shift+x",
    "command": "workbench.view.extensions"
  },

  // Git Commands
  {
    "key": "ctrl+shift+g g",
    "command": "git.openChange"
  },
  {
    "key": "ctrl+shift+g s",
    "command": "git.stage"
  },
  {
    "key": "ctrl+shift+g u",
    "command": "git.unstage"
  },
  {
    "key": "ctrl+shift+g c",
    "command": "git.commit"
  },
  {
    "key": "ctrl+shift+g p",
    "command": "git.push"
  },

  // Quick Open
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },

  // Split Editor
  {
    "key": "ctrl+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },

  // Debugging
  {
    "key": "f5",
    "command": "workbench.action.debug.start"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.stop"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "workbench.action.debug.restart"
  },
  {
    "key": "f9",
    "command": "editor.debug.action.toggleBreakpoint"
  },
  {
    "key": "f10",
    "command": "workbench.action.debug.stepOver"
  },
  {
    "key": "f11",
    "command": "workbench.action.debug.stepInto"
  },
  {
    "key": "shift+f11",
    "command": "workbench.action.debug.stepOut"
  },

  // Custom Development Shortcuts
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+alt+b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.debug.run"
  },

  // Laravel Artisan Commands (if Laravel extension is installed)
  {
    "key": "ctrl+alt+a",
    "command": "laravel.artisan"
  },

  // Multiple Cursors
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.insertCursorAbove"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.insertCursorBelow"
  },
  {
    "key": "ctrl+u",
    "command": "cursorUndo"
  },

  // Zen Mode
  {
    "key": "ctrl+k z",
    "command": "workbench.action.toggleZenMode"
  },

  // Toggle Word Wrap
  {
    "key": "alt+z",
    "command": "editor.action.toggleWordWrap"
  },

  // Toggle Minimap
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleMinimap"
  },

  // Emmet
  {
    "key": "tab",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },

  // Docker (if Docker extension is installed)
  {
    "key": "ctrl+alt+d",
    "command": "workbench.action.tasks.runTask",
    "args": "docker-compose up"
  }
]
