!function(t,e){"use strict";function s(t){if(this.scriptRules=[],this.exceptionsRules=[],t)for(let e=0;e<t.length;e++)this.addRule(t[e])}s.prototype={addRule(e){if(e.whiteListRule)return this.exceptionsRules.push(e),void this._applyExceptionRuleToFilter(e);this._applyExceptionRulesToRule(e),this.scriptRules.push(e)},removeRule(e){t.utils.collections.removeRule(this.scriptRules,e),t.utils.collections.removeRule(this.exceptionsRules,e),this._rollbackExceptionRule(e)},clearRules(){this.scriptRules=[],this.exceptionsRules=[]},getRules(){return this.scriptRules.concat(this.exceptionsRules)},buildScript(t,s){const i=[];for(let e=0;e<this.scriptRules.length;e+=1){const o=this.scriptRules[e];var l;!o.isPermitted(t)||(l=o.getScript(s))&&i.push({scriptSource:o.scriptSource,script:l,rule:o})}return i},_rollbackExceptionRule(t){if(t.whiteListRule)for(let e=0;e<this.scriptRules.length;e++){const s=this.scriptRules[e];s.getRuleContent()===t.getRuleContent()&&s.removeRestrictedDomains(t.getPermittedDomains())}},_applyExceptionRuleToFilter(t){for(let e=0;e<this.scriptRules.length;e++)this._removeExceptionDomains(this.scriptRules[e],t)},_applyExceptionRulesToRule(t){for(let e=0;e<this.exceptionsRules.length;e++)this._removeExceptionDomains(t,this.exceptionsRules[e])},_removeExceptionDomains(e,t){e.getRuleContent()===t.getRuleContent()&&e.addRestrictedDomains(t.getPermittedDomains())}},e.ScriptFilter=s}(adguard,adguard.rules);