[user]
	name = Quoc Nho
	email = your.email@example.com

[init]
	defaultBranch = main

[core]
	editor = nvim
	autocrlf = input
	excludesfile = ~/.gitignore_global
	pager = less -R

[push]
	default = simple
	autoSetupRemote = true

[pull]
	rebase = false

[merge]
	tool = vimdiff

[diff]
	tool = vimdiff

[color]
	ui = auto
	branch = auto
	diff = auto
	status = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	# Basic shortcuts
	st = status
	co = checkout
	br = branch
	ci = commit
	cm = commit -m
	ca = commit -am

	# View log
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all

	# Show branches
	branches = branch -a
	remotes = remote -v

	# Stash operations
	sl = stash list
	sa = stash apply
	ss = stash save
	sp = stash pop

	# Quick diff
	unstaged = diff
	staged = diff --cached

	# Undo operations
	undo = reset HEAD~1 --mixed
	amend = commit -a --amend

	# Clean operations
	discard = checkout --
	prestage = diff --cached --diff-filter=A

	# Find commits
	find = "!git log --pretty=\"format:%Cgreen%H %Cblue%s\" --name-status --grep"

	# Working with remotes
	up = !git remote update -p; git merge --ff-only @{u}

	# Show current branch
	current = rev-parse --abbrev-ref HEAD

	# Delete merged branches
	cleanup = "!git branch --merged | grep -v '\\*\\|main\\|master\\|develop' | xargs -n 1 git branch -d"

	# Show contributors
	contributors = shortlog --summary --numbered

	# File level operations
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"

	# Quick commit for WIP
	wip = commit -am "WIP"
	unwip = reset HEAD~1

	# Show file changes in last commit
	dl = "!git ll -1"
	dlc = diff --cached HEAD^

	# Quick push to origin
	po = push origin
	pom = push origin main
	pod = push origin develop

	# Submodule shortcuts
	sub = submodule

	# Show what happened today
	today = log --since='1 day ago' --oneline --author="Quoc Nho"

	# Interactive rebase
	ri = rebase -i

	# Show tracking branches
	track = "!git for-each-ref --format='%(refname:short) <- %(upstream:short)' refs/heads"

[credential]
	helper = store

[github]
	user = your-github-username

[gitlab]
	user = your-gitlab-username

[help]
	autocorrect = 1

[rerere]
	enabled = true

[rebase]
	autoStash = true

[status]
	showUntrackedFiles = all

[transfer]
	fsckobjects = true

[fetch]
	fsckobjects = true

[receive]
	fsckObjects = true

# Include local config if it exists
[include]
	path = ~/.gitconfig.local
