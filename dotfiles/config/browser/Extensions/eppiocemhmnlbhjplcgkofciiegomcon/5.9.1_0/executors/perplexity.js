(()=>{const W=(()=>{const W=sessionStorage.getItem("bis_data");if(null!==W){return JSON.parse(W)}return null})(),q=W?.config?`${W.id}_t`:null,k=W?.config?.aiMessagesConfig?.PERPLEXITY||{},{PARSERS:u=[],CHATBOT_NAME:O=""}=k;let p=!1,b="";const s={XMLHttpRequest:function(W){const q=fetch,k=W=>{let q=W.replace(/.*\/([gimy]*)$/,"$1"),k=W.replace(new RegExp("^/(.*?)/"+q+"$"),"$1");return new RegExp(k,q)};fetch=async function(u,O={}){try{const{SUBSCRIPTION_QUERY:p="",GENERAL_DATA:b={},QUERY:s=""}=W;let R=u instanceof Request?u.url:u;if("object"==typeof R&&R.href&&(R=R.href),k(p).test(R))try{const W=await q.apply(this,arguments);return W.body instanceof ReadableStream&&setTimeout(y.bind(this,W.clone(),b),0),W}catch(W){return q.apply(this,arguments)}if(!k(s).test(R))return q.apply(this,arguments);const i=new Date;try{const k=await q.apply(this,arguments);return k.body instanceof ReadableStream&&setTimeout(E.bind(this,O,i,W,k.clone()),0),k}catch(W){return q.apply(this,arguments)}}catch(W){}}}},y=async(W,q)=>{try{const k=await W.json(),u=Q(q.SUBSCRIPTION_VALUE_QUERY,k);p=u===q.SUBSCRIPTION_VALUE}catch(W){p=!1}},E=async(W,q,k,u)=>{const O=u.headers.get("Content-Type")||"";let p="",b="";try{O.includes("text/event-stream")&&(p=i(W.body,k.SEND_MESSAGE)||"",b=await h(u.body,k.RECEIVED_MESSAGE)||"")}catch(W){}finally{R(p,q,b,k)}},R=function(W,q,k,u){let s={chatbotName:O,messages:[]},{eventData:y,receivedMessage:E}=k;const R=self.location.href.split("-");s.sessionId=R[R.length-1],s.subscription=p,s.chatModel=b;let i={},h={};i=X(W,q,u.SEND_MESSAGE?.MESSAGE_LIMIT||1e4,"user"),h=X(E,null,u.RECEIVED_MESSAGE?.MESSAGE_LIMIT||3e4,"system"),i&&s.messages.push(i),h&&s.messages.push(h),s.messages.length&&setTimeout((()=>D(s)),0)},i=(W="{}",q={})=>{const{MESSAGE_QUERY:k=[],ATTACHMENTS_QUERY:u=[],SOURCE_QUERY:O=[],IGNORED_SOURCES:p=[],MODEL_QUERY:s=[]}=q;if(W){const q=JSON.parse(W),y=Q(O,q)||"";if(b=Q(s,q)||"",p.includes(y))return"";let E=Q(k,q)||"";if(E){const W=Q(u,q)||[];W?.length&&W.forEach((W=>{W.includes(E)&&(E="")}))}return E}return""},h=async(W,q={})=>{const{DATA_OBJ_QUERY:k=[],MESSAGE_QUERY:u=[]}=q,O=W.getReader(),p=new TextDecoder("utf-8");let b="";for(;;){const{value:W,done:q}=await O.read();if(q)break;let s;for(b+=p.decode(W,{stream:!0}),b=b.replace(/\r\n/g,"\n");-1!==(s=b.indexOf("\n\n"));){const W=b.slice(0,s).trim();b=b.slice(s+2);const q=W.split("\n"),O={};for(const W of q){const[q,...k]=W.split(":");if(q&&k.length){const W=k.join(":").trim();if("data"===q)try{O.data=JSON.parse(W)}catch{O.data=W}else O[q]=W}}const p=Q(k,O);if(p?.length){let W="";if(p.forEach((q=>{const k=Q(u,q);k&&(W=k)})),W)return{receivedMessage:W,eventData:O}}}}},Q=(W,q)=>W.reduce(((W,q)=>W?"object"==typeof W?W[q]:W:null),q),X=(W,q,k,u)=>{if(W){const O=n(W,q,k,u);if(O)return O}},n=function(W,q,k,u="user"){return{messageType:u,messageId:"",messageLength:W.length,messageText:W.trim().slice(0,k),creationTime:q}},D=W=>{try{let k={posdMessageId:"PANELOS_MESSAGE",posdHash:(Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)).substring(0,22),type:"PERPLEXITY_DATA",from:q,to:q.substring(0,q.length-2),content:W};window.postMessage(k)}catch(W){}};for(let W of u)W.USE&&s[W.TYPE](W)})();