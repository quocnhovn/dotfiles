adguard.stealthService=function(a){"use strict";function i(e,t){const r=new a.rules.UrlFilterRule("$cookie=/.+/"+(0<e?";maxAge="+60*e:""));return r.addStealthActions(t),r}const c=[/https?:\/\/(www\.)?google\./i,/https?:\/\/(www\.)?yandex\./i,/https?:\/\/(www\.)?bing\./i,/https?:\/\/(www\.)?yahoo\./i,/https?:\/\/(www\.)?go\.mail\.ru/i,/https?:\/\/(www\.)?ask\.com/i,/https?:\/\/(www\.)?aol\.com/i,/https?:\/\/(www\.)?baidu\.com/i,/https?:\/\/(www\.)?seznam\.cz/i],R={REFERRER:"Referer",X_CLIENT_DATA:"X-Client-Data",DO_NOT_TRACK:"DNT"},d={DO_NOT_TRACK:{name:"DNT",value:"1"},GLOBAL_PRIVACY_CONTROL:{name:"Sec-GPC",value:"1"}},E={HIDE_REFERRER:1,HIDE_SEARCH_QUERIES:2,BLOCK_CHROME_CLIENT_DATA:4,SEND_DO_NOT_TRACK:8,FIRST_PARTY_COOKIES:16,THIRD_PARTY_COOKIES:32},T=e=>{var t=a.utils.url.getHost(e);return(0===e.indexOf("https")?"https://":"http://")+t+"/"},g=()=>a.settings.getProperty(a.settings.DISABLE_STEALTH_MODE)||a.settings.isFilteringDisabled(),_=e=>!g()&&a.settings.getProperty(e);function p(e,t,r){const s=a.requestFilter.findStealthWhiteListRule(t,t,r);return s&&s.isDocumentWhiteList()?(a.console.debug("Stealth document whitelist rule found."),s):(r=a.requestFilter.findStealthWhiteListRule(e,t,r))?(a.console.debug("Stealth whitelist rule found."),r):null}const t=()=>{var e,t;browser.privacy&&(e=()=>{var e=browser.runtime.lastError;e&&a.console.error("Error updating privacy.network settings: {0}",e)},t=_(a.settings.BLOCK_WEBRTC),"object"==typeof browser.privacy.network.webRTCMultipleRoutesEnabled&&(t?browser.privacy.network.webRTCMultipleRoutesEnabled.set({value:!1,scope:"regular"},e):browser.privacy.network.webRTCMultipleRoutesEnabled.clear({scope:"regular"},e)),"object"==typeof browser.privacy.network.webRTCIPHandlingPolicy&&(t?browser.privacy.network.webRTCIPHandlingPolicy.set({value:"disable_non_proxied_udp",scope:"regular"},e):browser.privacy.network.webRTCIPHandlingPolicy.clear({scope:"regular"},e)),"object"==typeof browser.privacy.network.peerConnectionEnabled&&(t?browser.privacy.network.peerConnectionEnabled.set({value:!1,scope:"regular"},e):browser.privacy.network.peerConnectionEnabled.clear({scope:"regular"},e)))},r=()=>{_(a.settings.BLOCK_WEBRTC)?a.utils.browser.containsPermissions(["privacy"]).then(e=>!!e||a.utils.browser.requestPermissions(["privacy"])).then(e=>{e?t():a.settings.setProperty(a.settings.BLOCK_WEBRTC,!1)}).catch(e=>{a.console.error(e)}):a.utils.browser.containsPermissions(["privacy"]).then(e=>!e||(t(),a.utils.browser.removePermission(["privacy"])))};var e=()=>!a.utils.browser.isEdgeBrowser();e()&&(a.settings.onUpdated.addListener(function(e){e!==a.settings.BLOCK_WEBRTC&&e!==a.settings.DISABLE_STEALTH_MODE||(a.utils.browser.isChromium()?r:t)()}),a.listeners.addListener(function(e){e===a.listeners.APPLICATION_INITIALIZED&&a.utils.browser.containsPermissions(["privacy"]).then(e=>{e&&t()})}));return{processRequestHeaders:function(e,t){if(g())return!1;var r=a.requestContextStorage.get(e);if(!r)return!1;var s=r.tab,o=r.requestUrl,r=r.requestType;if(a.console.debug("Stealth service processing request headers for {0}",o),a.frames.shouldStopRequestProcess(s))return a.console.debug("Tab whitelisted or protection disabled"),!1;s=a.frames.getMainFrameUrl(s);if(!s)return a.console.debug("Frame was not recorded in onBeforeRequest event"),!1;const i=a.requestFilter.findWhiteListRule(o,s,r);if(i&&i.isDocumentWhiteList())return a.console.debug("Whitelist rule found"),!1;s=p(o,s,r);if(s)return a.console.debug("Whitelist stealth rule found"),a.requestContextStorage.update(e,{requestRule:s}),!1;let n=0;if(_(a.settings.HIDE_REFERRER)){a.console.debug("Remove referrer for third-party requests");const u=a.utils.browser.findHeaderByName(t,R.REFERRER);u&&a.utils.url.isThirdPartyRequest(o,u.value)&&(u.value=T(o),n|=E.HIDE_REFERRER)}r=r===a.RequestTypes.DOCUMENT;if(_(a.settings.HIDE_SEARCH_QUERIES)&&r){a.console.debug("Hide referrer in case of search engine is referrer");const l=a.utils.browser.findHeaderByName(t,R.REFERRER);l&&function(t){if(!t)return!1;for(let e=0;e<c.length;e++)if(c[e].test(t))return!0;return!1}(l.value)&&a.utils.url.isThirdPartyRequest(o,l.value)&&(l.value=T(o),n|=E.HIDE_SEARCH_QUERIES)}return _(a.settings.BLOCK_CHROME_CLIENT_DATA)&&(a.console.debug("Remove X-Client-Data header"),a.utils.browser.removeHeader(t,R.X_CLIENT_DATA)&&(n|=E.BLOCK_CHROME_CLIENT_DATA)),_(a.settings.SEND_DO_NOT_TRACK)&&(a.console.debug("Adding Do-Not-Track (DNT) header"),t.push(d.DO_NOT_TRACK),t.push(d.GLOBAL_PRIVACY_CONTROL),n|=E.SEND_DO_NOT_TRACK),0<n&&a.requestContextStorage.update(e,{stealthActions:n}),a.console.debug("Stealth service processed request headers for {0}",o),0<n},getCookieRules:function(e,t,r){if(g())return null;const s=a.requestFilter.findWhiteListRule(e,t,r);if(s&&s.isDocumentWhiteList())return a.console.debug("Whitelist rule found"),!1;if(p(e,t,r))return a.console.debug("Whitelist stealth rule found"),null;const o=[];if(a.console.debug("Stealth service lookup cookie rules for {0}",e),_(a.settings.SELF_DESTRUCT_FIRST_PARTY_COOKIES)&&o.push(i(a.settings.getProperty(a.settings.SELF_DESTRUCT_FIRST_PARTY_COOKIES_TIME),E.FIRST_PARTY_COOKIES)),!_(a.settings.SELF_DESTRUCT_THIRD_PARTY_COOKIES))return a.console.debug("Stealth service processed lookup cookie rules for {0}",e),o;t=t&&a.utils.url.isThirdPartyRequest(e,t),r=r===a.RequestTypes.DOCUMENT;return t&&!r&&o.push(i(a.settings.getProperty(a.settings.SELF_DESTRUCT_THIRD_PARTY_COOKIES_TIME),E.THIRD_PARTY_COOKIES)),a.console.debug("Stealth service processed lookup cookie rules for {0}",e),o},canBlockWebRTC:e,getDomSignalScript:()=>{if(!_(a.settings.SEND_DO_NOT_TRACK))return null;return`(function() {
    try {
        if ('globalPrivacyControl' in Navigator.prototype) {
            return
        };
        Object.defineProperty(Navigator.prototype, "globalPrivacyControl", {
            get: () => true,
            configurable: true,
            enumerable: true
        });
    } catch (ex) {
        console.error('AG: Error executing send dom signal: ' + ex);
    }
})();`},STEALTH_ACTIONS:E}}(adguard);