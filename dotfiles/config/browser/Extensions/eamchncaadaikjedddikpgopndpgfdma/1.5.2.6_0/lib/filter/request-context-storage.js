!function(p){const f={NONE:1,PROCESSING:2,DONE:3},g=new Map;let a=0;const o=(e,t)=>e=t?(e||[]).concat(t):e,s=e=>(e||[]).map(e=>({name:e.name,value:e.value}));const t=(e,t)=>{const n=g.get(e);n&&("requestState"in t&&(n.requestState=t.requestState),"contentModifyingState"in t&&(n.contentModifyingState=t.contentModifyingState),"requestRule"in t&&(n.requestRule=t.requestRule,p.filteringLog.bindRuleToHttpRequestEvent(n.tab,n.requestRule,n.eventId)),"replaceRules"in t&&(n.replaceRules=t.replaceRules),"removeparamRules"in t&&(n.removeparamRules=t.removeparamRules),"cspRules"in t&&(n.cspRules=o(n.cspRules,t.cspRules)),"stealthActions"in t&&(n.stealthActions=t.stealthActions),"requestHeaders"in t&&(n.requestHeaders=s(t.requestHeaders)),"responseHeaders"in t&&(n.responseHeaders=s(t.responseHeaders)),"modifiedRequestHeaders"in t&&(n.modifiedRequestHeaders=s(t.modifiedRequestHeaders)),"modifiedResponseHeaders"in t&&(n.modifiedResponseHeaders=s(t.modifiedResponseHeaders)),"cspReportBlocked"in t&&(n.cspReportBlocked=t.cspReportBlocked))};const n=e=>{const n=g.get(e);if(n){var{tab:s,requestUrl:o,referrerUrl:r}=n;let t=[];if(n.requestState===f.DONE){n.requestState=f.NONE;var{requestRule:i,cspRules:a,stealthActions:d,cspReportBlocked:l}=n;if(i&&(p.filteringLog.bindRuleToHttpRequestEvent(s,i,n.eventId),t.push(i)),a){for(const u of a)p.filteringLog.addHttpRequestEvent(s,o,r,p.RequestTypes.CSP,u);t=t.concat(a)}d&&p.filteringLog.bindStealthActionsToHttpRequestEvent(s,d,n.eventId),l&&p.filteringLog.bindCspReportBlockedToHttpRequestEvent(s,l,n.eventId)}if(n.contentModifyingState===f.DONE){n.contentModifyingState=f.NONE;var{contentRules:d,replaceRules:l}=n;if(l&&(p.filteringLog.bindReplaceRulesToHttpRequestEvent(s,l,n.eventId),t.push(l)),d){for(const c of d){for(const R of n.elements.get(c)||[])p.filteringLog.addCosmeticEvent(s,R,o,n.requestType,c);n.elements.delete(c)}t=t.concat(d)}}for(let e=0;e<t.length;e+=1)p.webRequestService.recordRuleHit(s,t[e],o);n.requestState===f.NONE&&n.contentModifyingState===f.NONE&&g.delete(e)}};p.requestContextStorage={get:e=>g.get(e),record:(e,t,n,s,o,r)=>{var i=(a+=1,a);o!==p.RequestTypes.DOCUMENT||g.has(e)||p.filteringLog.clearEventsByTabId(r.tabId);s={requestId:e,requestUrl:t,referrerUrl:n,originUrl:s,requestType:o,tab:r,eventId:i,requestState:f.PROCESSING,contentModifyingState:f.NONE};g.set(e,s),p.filteringLog.addHttpRequestEvent(r,t,n,o,null,i)},recordEmulated:(e,t,n,s,o)=>{p.filteringLog.addHttpRequestEvent(s,e,t,n,o),p.webRequestService.recordRuleHit(s,o,e)},update:t,bindContentRule:(e,t,n)=>{const s=g.get(e);if(s){s.contentRules=o(s.contentRules,[t]),s.elements||(s.elements=new Map);let e=s.elements.get(t);e||(e=[],s.elements.set(t,e)),e.push(n)}},onRequestCompleted:e=>{t(e,{requestState:f.DONE}),n(e)},onContentModificationStarted:e=>{t(e,{contentModifyingState:f.PROCESSING})},onContentModificationFinished:e=>{t(e,{contentModifyingState:f.DONE}),n(e)}}}(adguard);